/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> neighbors;
    Node() {
        val = 0;
        neighbors = vector<Node*>();
    }
    Node(int _val) {
        val = _val;
        neighbors = vector<Node*>();
    }
    Node(int _val, vector<Node*> _neighbors) {
        val = _val;
        neighbors = _neighbors;
    }
};
*/

class Solution {
public:
    vector<Node*> vc;
    Solution(){ 
        for(int i=0; i<101; i++){
            vc.push_back(nullptr);
        }
    }
    Node* cloneGraph(Node* node) {
        if(node == NULL) return nullptr;
        if(vc[node->val]){
            return vc[node->val];
        }
        Node* root = new Node(node->val);
        vc[root->val] = root;
        
        for(auto it:node->neighbors){
            root->neighbors.push_back(cloneGraph(it));
        }
        return root;
        
    }
};