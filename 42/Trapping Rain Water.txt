Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.

class Solution {
public:
    // int trap(vector<int>& height) {
    //     int n = height.size();
    //     vector<int> left(n, 0);
    //     vector<int> right(n, 0);
    //     left[0] = height[0];
    //     right[n-1] = height[n-1];

    //     for(int i=1; i<n; i++){
    //         left[i] = max(left[i-1], height[i]);
    //     }

    //     for(int i=n-2; i>=0; i--){
    //         right[i] = max(right[i+1], height[i]);
    //     }

    //     int ans = 0;
    //     for(int i=0; i<n; i++){
    //         ans += (min(left[i], right[i]) - height[i]);
    //     }


    //     return ans;
    // }

    int trap(vector<int>& height) {
        int n = height.size();
        int left = height[0];
        int right = height[n-1];

        int i=0, j=n-1;
        int ans = 0;
        while(i<j){
            if(left <= right){
                ans += (left - height[i]);
                i++;
                left = max(left, height[i]);
            } else {
                ans += (right - height[j]);
                j--;
                right = max(right, height[j]);
            }
        }

        return ans;
    }
};