/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        
        ListNode* current = head;
        ListNode* temp = nullptr;
        ListNode* next = nullptr;
        ListNode* prev = nullptr;
        if( head !=nullptr && head->next!=nullptr){
            head = head->next;
        }
        
        while(current != nullptr){
            next = current->next;
            temp = current;
            
            if(next == nullptr){
                break;
            }
            temp->next = next->next;
            next->next = temp;
            if(prev != nullptr){
                prev->next = next;
            }
            prev = current;
            current = temp->next;
        }
        return head;
    }
};