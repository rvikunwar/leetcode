/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    
    bool checkPalindrone(ListNode* head, ListNode* &current){
        if(head==nullptr){
            return true;
        }
        bool res =  checkPalindrone(head->next, current);
        if(res == false){
            return false;
        }
        if(head->val == current->val){
            current = current->next;
            return true;
        } else {
            return false;
        }
    }
    
    bool isPalindrome(ListNode* head) {
        ListNode* current = head;
        return checkPalindrone(head, head);
    }
};