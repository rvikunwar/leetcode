// naive solution
class Solution {
public:
    int findCenter(vector<vector<int>>& edges) {
        unordered_map<int, int> mp;
        
        for(int i=0; i<edges.size(); i++){
            if(mp.find(edges[i][0]) == mp.end()){
                mp[edges[i][0]] = 1;
            } else {
                return edges[i][0];
            }
            
            if(mp.find(edges[i][1]) == mp.end()){
                mp[edges[i][1]] = 1;
            } else {
                return edges[i][1];
            }
        }
        
        return 0;
    }
};

//optimal solution
class Solution {
public:
    int findCenter(vector<vector<int>>& edges) {
        int a = edges[0][0];
        int b = edges[0][1];
        
        if(a == edges[1][0] || a ==edges[1][1]){
            return a;
        }
        return b;
    }
};