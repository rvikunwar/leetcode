There are n people and 40 types of hats labeled from 1 to 40.

Given a 2D integer array hats, where hats[i] is a list of all hats preferred by the ith person.

Return the number of ways that the n people wear different hats to each other.

Since the answer may be too large, return it modulo 109 + 7.

class Solution {
public:
    int mod = 1000000000 + 7;
    int count(int hat, int person, vector<vector<int>> &persons, vector<int> &hatExists, vector<vector<int>> &dp){
        if(person == 0 && hat == 41){
            return 1;
        }
        
        if(hat > 40){
            return 0;
        }

        if(dp[person][hat] != -1){
            return dp[person][hat];
        }
        int ans = 0;
        if(hatExists[hat] == 1){
            for(auto it: persons[hat]){
                if(((1<<it) & person)){
                    int person_ = (1<<it) ^ person;
                    ans += count(hat + 1, person_, persons, hatExists, dp);
                    ans %= mod;
                }
            }

        } 
        ans += count(hat + 1, person, persons, hatExists, dp);
        ans %= mod;
        
        return dp[person][hat] = ans;
    }

    int numberWays(vector<vector<int>>& hats) {
        vector<vector<int>> persons(41);
        int n = hats.size();
        vector<int> hatExists(41, 0);
        for(int i=0; i<hats.size(); i++){
            for(int j=0; j<hats[i].size(); j++){
                persons[hats[i][j]].push_back(i);
                hatExists[hats[i][j]] = 1;
            }
        }

        vector<vector<int>> dp(1<<n, vector<int>(41, -1));
        int person = (1 << n) - 1;
        return count(1, person, persons, hatExists, dp);
    }
};