class Solution {
public:
    int minOperations(vector<int>& nums, int x) {
        unordered_map<int, int> mp;
        int val = 0;
        int steps = INT_MAX;
        for(int i=0; i<nums.size(); i++){
            val = val+nums[i];
            if(x-val>0){
                 mp[val] = i+1;     
            } else if(x-val == 0){
                steps = i+1;
                break;
            } else {
                break;
            }   
        }
        
        val = 0;
        
        for(int i=nums.size()-1; i>=0; i--){
            nums[i] = val+nums[i];
            val = nums[i];
            if(x-nums[i]>0){
                if(mp.find(x-nums[i]) != mp.end() && mp[x-nums[i]] -1 < i ){
                    if(steps > (nums.size()-i + mp[x-nums[i]])){
                        steps = nums.size()-i + mp[x-nums[i]];
                    }   
                }    
            } else if(x-nums[i]==0){
                if(steps>nums.size()-i){
                    steps = nums.size()-i;
                }
                break;
            } else {
                break;
            }
        }
    if(steps == INT_MAX){
        return -1;
    } else {
        return steps;
    }
    }
};